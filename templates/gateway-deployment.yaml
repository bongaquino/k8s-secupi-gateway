apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "secupi-gateway.fullname" . }}
  labels:
    {{- include "secupi-gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.gateway.autoscaling.enabled }}
  replicas: {{ .Values.gateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "secupi-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "secupi-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "secupi-gateway.serviceAccountName" . }}
      initContainers:
        - name: ssl-setup
          image: openjdk:11-jre-slim
          command:
            - /bin/bash
            - -c
            - |
              echo "Setting up SSL certificates and BouncyCastle library..."
              
              # Download BouncyCastle libraries
              apt-get update && apt-get install -y wget
              cd /opt/secupi/lib/
              
              # Download BouncyCastle Provider and PKCS libraries
              wget -q https://repo1.maven.org/maven2/org/bouncycastle/bcprov-jdk15on/1.70/bcprov-jdk15on-1.70.jar
              wget -q https://repo1.maven.org/maven2/org/bouncycastle/bcpkcs-jdk15on/1.70/bcpkcs-jdk15on-1.70.jar
              
              echo "Downloaded BouncyCastle libraries:"
              ls -la /opt/secupi/lib/bc*.jar
              
              # Setup SSL certificates
              cp /tmp/ssl-certs/keystore.p12 /opt/secupi/etc/
              cd /opt/secupi/etc/
              keytool -importkeystore -srckeystore keystore.p12 -srcstoretype PKCS12 -destkeystore keystore.jks -deststoretype JKS -srcstorepass test123456 -deststorepass test123456 -noprompt
              
              echo "SSL setup completed successfully:"
              ls -la /opt/secupi/etc/
              echo "BouncyCastle libraries available:"
              ls -la /opt/secupi/lib/bc*.jar
          volumeMounts:
            - name: ssl-storage
              mountPath: /opt/secupi/etc
            - name: lib-storage
              mountPath: /opt/secupi/lib
            - name: ssl-certs
              mountPath: /tmp/ssl-certs
              readOnly: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.gateway.port }}
              protocol: TCP
          volumeMounts:
            - name: ssl-storage
              mountPath: /opt/secupi/etc
            - name: lib-storage
              mountPath: /opt/secupi/lib
          env:
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: DB_NAME
              value: {{ .Values.database.name }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: password
            {{- if .Values.gateway.env }}
            {{- range $key, $value := .Values.gateway.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
      volumes:
        - name: ssl-storage
          emptyDir: {}
        - name: lib-storage
          emptyDir: {}
        - name: ssl-certs
          secret:
            secretName: secupi-ssl-certs