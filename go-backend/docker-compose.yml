services:
  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - koneksi-network

  # Mongo Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8082:8081"
    networks:
      - koneksi-network

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    command: redis-server --notify-keyspace-events AKE
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - koneksi-network

  # Redis Commander (Web UI for Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8083:8081"
    networks:
      - koneksi-network

  # ===================================================================
  # ELK STACK DISABLED - All ELK services removed from staging
  # ===================================================================
  
  # # Elasticsearch (ELK Stack) - DISABLED
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
  #   container_name: elasticsearch
  #   env_file:
  #     - .env.elk
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - xpack.security.enabled=true
  #     - xpack.security.enrollment.enabled=false
  #     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elastic-data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #   networks:
  #     - koneksi-network

  # # Logstash (ELK Stack) - DISABLED
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.9.0
  #   container_name: logstash
  #   volumes:
  #     - ./docker/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   environment:
  #     - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - "12201:12201/udp"
  #   networks:
  #     - koneksi-network

  # # Kibana (ELK Stack) - DISABLED
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.9.0
  #   container_name: kibana
  #   env_file:
  #     - .env.elk
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #     - ELASTICSEARCH_USERNAME=kibana_system
  #     - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
  #     - SERVER_NAME=elk-staging.koneksi.co.kr
  #     - SERVER_PUBLICBASEURL=https://elk-staging.koneksi.co.kr
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - koneksi-network

  # Gateway
  gateway:
    image: tykio/tyk-gateway:latest
    container_name: gateway
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/apps:/opt/tyk-gateway/apps
      - ./gateway/templates:/opt/tyk-gateway/templates
      - ./gateway/tyk.conf:/opt/tyk-gateway/tyk.conf
      - ./gateway/policies/policies.json:/opt/tyk-gateway/policies/policies.json
    environment:
      TYK_GW_SECRET: "352d20ee67be67f6340b4c0605b044b7"
      TYK_GW_STORAGE_HOST: "redis"
      TYK_GW_STORAGE_PORT: "6379"
      TYK_GW_STORAGE_PASSWORD: ""
      TYK_GW_STORAGE_DB: "0"
    depends_on:
      - redis
    networks:
      - koneksi-network

  # Server
  server:
    image: koneksi/server:latest
    build:
      context: server
      dockerfile: Dockerfile
    container_name: server
    restart: unless-stopped
    env_file:
      - server/.env
    volumes:
      - ./server:/app
    depends_on:
      - mongo
    networks:
      - koneksi-network
    ports:
      - "3000:3000"

volumes:
  mongo-data:
  redis-data:
  # elastic-data:  # DISABLED - ELK stack removed

networks:
  koneksi-network:
    external: true
