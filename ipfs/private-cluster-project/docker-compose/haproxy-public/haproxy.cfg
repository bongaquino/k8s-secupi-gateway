global
    daemon
    maxconn 4096
    user haproxy
    group haproxy
    
    # Logging
    log stdout local0 info
    
    # SSL/TLS Configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    timeout connect 5s
    timeout client 60s
    timeout server 60s
    timeout queue 30s
    timeout check 10s
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor
    option redispatch
    retries 3
    
    # Enhanced health checks
    option httpchk GET /api/v0/version
    http-check expect status 200

# Stats interface
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST
    stats show-legends
    stats show-node

# HTTP Frontend (redirect to HTTPS)
frontend http_frontend
    bind *:80
    
    # ACME challenge for Let's Encrypt
    acl acme_challenge path_beg /.well-known/acme-challenge/
    use_backend letsencrypt if acme_challenge
    
    # Redirect all other HTTP traffic to HTTPS
    redirect scheme https if !{ ssl_fc }

# HTTPS Frontend
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/
    
    # Security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-Frame-Options DENY
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # CORS headers for IPFS API
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    
    # Route based on path
    acl api_path path_beg /api/v0/
    acl gateway_path path_beg /ipfs/
    acl cluster_api_path path_beg /cluster/
    
    use_backend ipfs_api if api_path
    use_backend ipfs_gateway if gateway_path
    use_backend ipfs_cluster_api if cluster_api_path
    
    default_backend ipfs_gateway

# Backend for IPFS API (port 5001) - Enhanced Failover
backend ipfs_api
    balance roundrobin
    option httpchk GET /api/v0/version
    http-check expect status 200
    
    # Enhanced failover settings
    default-server check inter 10s rise 2 fall 3 slowstart 60s maxconn 100
    
    # Primary servers with backup designation
    server ipfs-private-01 172.21.0.10:5001 weight 100
    server ipfs-private-02 172.21.0.11:5001 weight 100
    server ipfs-private-03 172.21.0.12:5001 weight 100 backup
    
    # Emergency fallback (if all primary fail, use any available)
    server emergency-01 172.21.0.10:5001 backup weight 50
    server emergency-02 172.21.0.11:5001 backup weight 50

# Backend for IPFS Gateway (port 8080) - Enhanced Failover
backend ipfs_gateway
    balance roundrobin
    option httpchk GET /api/v0/version
    http-check expect status 200
    
    # Enhanced failover settings
    default-server check inter 10s rise 2 fall 3 slowstart 60s maxconn 200
    
    # Primary servers with load distribution
    server ipfs-private-01 172.21.0.10:8080 weight 100
    server ipfs-private-02 172.21.0.11:8080 weight 100
    server ipfs-private-03 172.21.0.12:8080 weight 100 backup
    
    # Emergency fallback
    server emergency-01 172.21.0.10:8080 backup weight 50
    server emergency-02 172.21.0.11:8080 backup weight 50

# Backend for IPFS Cluster API (port 9094) - Enhanced Failover
backend ipfs_cluster_api
    balance roundrobin
    option httpchk GET /id
    http-check expect status 200
    
    # Enhanced failover settings
    default-server check inter 15s rise 2 fall 3 slowstart 30s maxconn 50
    
    # All nodes active for cluster API (no backup needed)
    server cluster-private-01 172.21.0.10:9094 weight 100
    server cluster-private-02 172.21.0.11:9094 weight 100
    server cluster-private-03 172.21.0.12:9094 weight 100

# Backend for Let's Encrypt ACME challenge
backend letsencrypt
    server letsencrypt 127.0.0.1:8080 