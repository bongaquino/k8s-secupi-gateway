version: '3.8'

services:
  ipfs:
    image: ipfs/kubo:latest
    container_name: ipfs
    restart: unless-stopped
    volumes:
      - /data/ipfs:/data/ipfs
      - ./start-ipfs.sh:/start-ipfs.sh
    ports:
      - "4001:4001"   # Swarm
      - "5001:5001"   # API
      - "8080:8080"   # Gateway
    networks:
      - ipfs_network
    entrypoint: ["/bin/sh", "/start-ipfs.sh"]

  ipfs-cluster:
    build:
      context: .
      dockerfile: Dockerfile.cluster
    container_name: ipfs-cluster
    restart: unless-stopped
    environment:
      - CLUSTER_IPFSHTTP_NODEMULTIADDRESS=/dns4/ipfs/tcp/5001
      - CLUSTER_CRDT_TRUSTALLPEERS=true
      - CLUSTER_CRDT_DATACENTER=node-peer-01
<<<<<<< HEAD
      - CLUSTER_CRDT_CLUSTERNAME=example-ipfs-cluster
=======
      - CLUSTER_CRDT_CLUSTERNAME=example-ipfs-cluster
>>>>>>> ff1a2945f8bd7c03b52b06fcba179354b2b893ff
      - CLUSTER_BOOTSTRAP_NODE=false
      - CLUSTER_SECRET=c646426b598f916698b56de8a83854a15e286cb4a08c35b28d819d169f0b9ad4
      - CLUSTER_PEERNAME=node-peer-01
      - CLUSTER_MONITORPINGINTERVAL=2s
      - CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS=/ip4/0.0.0.0/tcp/9094
      - CLUSTER_RESTAPI_HTTPANNOUNCEMULTIADDRESS=/ip4/<PEER_01_IP>/tcp/9094
      - CLUSTER_SWARM_LISTENMULTIADDRESS=/ip4/0.0.0.0/tcp/9096
      - CLUSTER_SWARM_ANNOUNCE=/ip4/<PEER_01_IP>/tcp/9096
      - CLUSTER_BOOTSTRAP_PEERS=/ip4/10.0.0.17/tcp/9096/p2p/12D3KooWQS5kWtsQ9aU3JatgPbQxVMX32tZij6qyhKd4HZg5W7tU
      - CLUSTER_DEBUG=true
    networks:
      - ipfs_network
    volumes:
      - /data/ipfs-cluster:/data/ipfs-cluster
    ports:
      - "9094:9094"   # HTTP API
      - "9095:9095"   # Internal API
      - "9096:9096"   # Libp2p Swarm
    depends_on:
      - ipfs

networks:
  ipfs_network:
    driver: bridge